// 👍🏻 - просто лайк мне за то, что я все это делаю
#include <iostream>
#include "plurality.h"
#include "pluralityE.h"
#include "error.h"
using namespace std;
void menu()
{
	int method;
	cout << "\nВыберите вариант реализации обработки исключительных ситуаций:\n0. Выйти из программы.\n1. Просто говорить о том, что возникла ошибка.\n2. Говорить о том, какая ошибка возникла (через класс-обработчик).\n3. Проверка операций в штатном режиме.\nВыбранный метод --------> ";
	cin >> method;
	cout << endl;
	switch (method)
	{
	case 0:
	{
		cout << endl << "Выход из программы..." << endl;
		break;
	}
	case 1:
	{
		srand(time(NULL));
		cout << "\nВыберите операцию, в которой произойдет исключительная ситуация:\n1. Ввод в пустое множество.\n2. Отрицательный индекс.\n3. Индекс больше размера.\n4. Получить ссылку на конец множества, но оно пустое.\n5. Удалить один элемент из пустого множества.\nЧтобы ничего не выбирать и вернуться в начало введите несуществующий номер.\nВыбранный метод --------> ";
		cin >> method;
		cout << endl;
		switch (method)
		{
		case 1:
		{
			try
			{
				Plurality pl;
				cout << "Посмотрим, что находится в множестве:" << endl;
				cout << pl << "А теперь попробуем ввести в него что-нибудь." << endl;
				cin >> pl;
			}
			catch (int)
			{
				cout << "Произошла ошибка!!!" << endl;
			}
			break;
		}
		case 2:
		{
			try
			{
				Plurality pl;
				for (int i = 0; i < 30; i++) pl.pushBack((rand() % 100));
				pl.deleteDubs();
				cout << "Посмотрим, что находится в множестве:" << endl;
				cout << pl << "А теперь попробуем вывести элемент с -4 индексом." << endl;
				cout << pl[-4];
			}
			catch (int)
			{
				cout << "Произошла ошибка!!!" << endl;
			}
			break;
		}
		case 3:
		{
			try
			{
				Plurality pl;
				for (int i = 0; i < 30; i++) pl.pushBack((rand() % 100));
				pl.deleteDubs();
				cout << "Посмотрим, что находится в множестве:" << endl;
				cout << pl << "А теперь попробуем вывести элемент с 40 индексом." << endl;
				cout << pl[40];
			}
			catch (int)
			{
				cout << "Произошла ошибка!!!" << endl;
			}
			break;
		}
		case 4:
		{
			try
			{
				Plurality pl;
				cout << "Посмотрим, что находится в множестве:" << endl;
				cout << pl << "А теперь попробуем получить ссылку на последний элемент и вывести его." << endl;
				cout << pl.back();
			}
			catch (int)
			{
				cout << "Произошла ошибка!!!" << endl;
			}
			break;
		}
		case 5:
		{
			try
			{
				Plurality pl;
				cout << "Посмотрим, что находится в множестве:" << endl;
				cout << pl << "А теперь попробуем удалить элемент из этого множества." << endl;
				--pl;
			}
			catch (int)
			{
				cout << "Произошла ошибка!!!" << endl;
			}
			break;
		}
		default:break;
		}
		menu();
		break;
	}
	case 2:
	{
		srand(time(NULL));
		cout << "\nВыберите операцию, в которой произойдет исключительная ситуация:\n1. Ввод в пустое множество.\n2. Отрицательный индекс.\n3. Индекс больше размера.\n4. Получить ссылку на конец множества, но оно пустое.\n5. Удалить один элемент из пустого множества.\nЧтобы ничего не выбирать и вернуться в начало введите несуществующий номер.\nВыбранный метод --------> ";
		cin >> method;
		cout << endl;
		switch (method)
		{
		case 1:
		{
			try
			{
				PluralityE pl;
				cout << "Посмотрим, что находится в множестве:" << endl;
				cout << pl << "А теперь попробуем ввести в него что-нибудь." << endl;
				cin >> pl;
			}
			catch (error e)
			{
				e.what();
			}
			break;
		}
		case 2:
		{
			try
			{
				PluralityE pl;
				for (int i = 0; i < 30; i++) pl.pushBack((rand() % 100));
				pl.deleteDubs();
				cout << "Посмотрим, что находится в множестве:" << endl;
				cout << pl << "А теперь попробуем вывести элемент с -4 индексом." << endl;
				cout << pl[-4];
			}
			catch (error e)
			{
				e.what();
			}
			break;
		}
		case 3:
		{
			try
			{
				PluralityE pl;
				for (int i = 0; i < 30; i++) pl.pushBack((rand() % 100));
				pl.deleteDubs();
				cout << "Посмотрим, что находится в множестве:" << endl;
				cout << pl << "А теперь попробуем вывести элемент с 40 индексом." << endl;
				cout << pl[40];
			}
			catch (error e)
			{
				e.what();
			}
			break;
		}
		case 4:
		{
			try
			{
				PluralityE pl;
				cout << "Посмотрим, что находится в множестве:" << endl;
				cout << pl << "А теперь попробуем получить ссылку на последний элемент и вывести его." << endl;
				cout << pl.back();
			}
			catch (error e)
			{
				e.what();
			}
			break;
		}
		case 5:
		{
			try
			{
				PluralityE pl;
				cout << "Посмотрим, что находится в множестве:" << endl;
				cout << pl << "А теперь попробуем удалить элемент из этого множества." << endl;
				--pl;
			}
			catch (error e)
			{
				e.what();
			}
			break;
		}
		default:break;
		}
		menu();
		break;
	}
	case 3:
	{
		srand(time(NULL));
		Plurality plR;
		for (int i = 0; i < 30; i++) plR.pushBack((rand() % 100));
		plR.deleteDubs();
		cout << "Случайное множество:" << endl << plR;
		cout << "Последний элемент случайного множества: " << plR.back() << endl;
		Plurality plM(10);
		cout << "Множество на десять в ручном режиме: " << endl;
		cin >> plM;
		plM.deleteDubs();
		cout << plM;
		cout << "Элемент по индексу ноль этого множества: " << plM[0] << endl;
		Plurality plpl = plR * plM;
		cout << "Пересечение этих множеств:\n" << plpl;
		cout << "Емкость пересечения: " << plpl.getCapacity() << endl;
		cout << "Размер пересечения: " << plpl() << endl;
		cout << "Из пересечения выпнули последний элемент и посадили его на диету:\n";
		int tmp = plpl.popBack();
		plpl.diet();
		cout << plpl << endl;
		cout << "Теперь емкость пересечения: " << plpl.getCapacity() << endl;
		cout << "Размер пересечения теперь: " << plpl() << endl;
		cout << "Не бойтесь, мы вернули элемент, который выкинули:\n";
		plpl.pushBack(tmp);
		cout << plpl << endl;
		cout << "Теперь емкость пересечения: " << plpl.getCapacity() << endl;
		cout << "Размер пересечения теперь: " << plpl() << endl;
		menu();
		break;
	}
	default:
	{
		menu();
		break;
	}
	cout << endl;
	}
}
int main()
{
	system("chcp 1251 > null");
	menu();
	return 0;
}
/*
		ТЕСТЫ:

Выберите вариант реализации обработки исключительных ситуаций:
0. Выйти из программы.
1. Просто говорить о том, что возникла ошибка.
2. Говорить о том, какая ошибка возникла (через класс-обработчик).
3. Проверка операций в штатном режиме.
Выбранный метод --------> 23


Выберите вариант реализации обработки исключительных ситуаций:
0. Выйти из программы.
1. Просто говорить о том, что возникла ошибка.
2. Говорить о том, какая ошибка возникла (через класс-обработчик).
3. Проверка операций в штатном режиме.
Выбранный метод --------> -5


Выберите вариант реализации обработки исключительных ситуаций:
0. Выйти из программы.
1. Просто говорить о том, что возникла ошибка.
2. Говорить о том, какая ошибка возникла (через класс-обработчик).
3. Проверка операций в штатном режиме.
Выбранный метод --------> 1


Выберите операцию, в которой произойдет исключительная ситуация:
1. Ввод в пустое множество.
2. Отрицательный индекс.
3. Индекс больше размера.
4. Получить ссылку на конец множества, но оно пустое.
5. Удалить один элемент из пустого множества.
Чтобы ничего не выбирать и вернуться в начало введите несуществующий номер.
Выбранный метод --------> 1

Посмотрим, что находится в множестве:
Вывод множества:
Пусто.
А теперь попробуем ввести в него что-нибудь.
Произошла ошибка!!!

Выберите вариант реализации обработки исключительных ситуаций:
0. Выйти из программы.
1. Просто говорить о том, что возникла ошибка.
2. Говорить о том, какая ошибка возникла (через класс-обработчик).
3. Проверка операций в штатном режиме.
Выбранный метод --------> 1


Выберите операцию, в которой произойдет исключительная ситуация:
1. Ввод в пустое множество.
2. Отрицательный индекс.
3. Индекс больше размера.
4. Получить ссылку на конец множества, но оно пустое.
5. Удалить один элемент из пустого множества.
Чтобы ничего не выбирать и вернуться в начало введите несуществующий номер.
Выбранный метод --------> 2

Посмотрим, что находится в множестве:
Вывод множества:
94 93 5 12 69 52 17 76 99 92 10 96 40 65 26 53 90 67 46 20 6 82 23 61 71 18 85
А теперь попробуем вывести элемент с -4 индексом.
Произошла ошибка!!!

Выберите вариант реализации обработки исключительных ситуаций:
0. Выйти из программы.
1. Просто говорить о том, что возникла ошибка.
2. Говорить о том, какая ошибка возникла (через класс-обработчик).
3. Проверка операций в штатном режиме.
Выбранный метод --------> 1


Выберите операцию, в которой произойдет исключительная ситуация:
1. Ввод в пустое множество.
2. Отрицательный индекс.
3. Индекс больше размера.
4. Получить ссылку на конец множества, но оно пустое.
5. Удалить один элемент из пустого множества.
Чтобы ничего не выбирать и вернуться в начало введите несуществующий номер.
Выбранный метод --------> 3

Посмотрим, что находится в множестве:
Вывод множества:
1 21 65 2 98 6 42 22 55 64 14 93 37 13 34 72 28 60 83 99 44 53 69 52 71
А теперь попробуем вывести элемент с 40 индексом.
Произошла ошибка!!!

Выберите вариант реализации обработки исключительных ситуаций:
0. Выйти из программы.
1. Просто говорить о том, что возникла ошибка.
2. Говорить о том, какая ошибка возникла (через класс-обработчик).
3. Проверка операций в штатном режиме.
Выбранный метод --------> 1


Выберите операцию, в которой произойдет исключительная ситуация:
1. Ввод в пустое множество.
2. Отрицательный индекс.
3. Индекс больше размера.
4. Получить ссылку на конец множества, но оно пустое.
5. Удалить один элемент из пустого множества.
Чтобы ничего не выбирать и вернуться в начало введите несуществующий номер.
Выбранный метод --------> 4

Посмотрим, что находится в множестве:
Вывод множества:
Пусто.
А теперь попробуем получить ссылку на последний элемент и вывести его.
Произошла ошибка!!!

Выберите вариант реализации обработки исключительных ситуаций:
0. Выйти из программы.
1. Просто говорить о том, что возникла ошибка.
2. Говорить о том, какая ошибка возникла (через класс-обработчик).
3. Проверка операций в штатном режиме.
Выбранный метод --------> 1


Выберите операцию, в которой произойдет исключительная ситуация:
1. Ввод в пустое множество.
2. Отрицательный индекс.
3. Индекс больше размера.
4. Получить ссылку на конец множества, но оно пустое.
5. Удалить один элемент из пустого множества.
Чтобы ничего не выбирать и вернуться в начало введите несуществующий номер.
Выбранный метод --------> 5

Посмотрим, что находится в множестве:
Вывод множества:
Пусто.
А теперь попробуем удалить элемент из этого множества.
Произошла ошибка!!!

Выберите вариант реализации обработки исключительных ситуаций:
0. Выйти из программы.
1. Просто говорить о том, что возникла ошибка.
2. Говорить о том, какая ошибка возникла (через класс-обработчик).
3. Проверка операций в штатном режиме.
Выбранный метод --------> 1


Выберите операцию, в которой произойдет исключительная ситуация:
1. Ввод в пустое множество.
2. Отрицательный индекс.
3. Индекс больше размера.
4. Получить ссылку на конец множества, но оно пустое.
5. Удалить один элемент из пустого множества.
Чтобы ничего не выбирать и вернуться в начало введите несуществующий номер.
Выбранный метод --------> 0


Выберите вариант реализации обработки исключительных ситуаций:
0. Выйти из программы.
1. Просто говорить о том, что возникла ошибка.
2. Говорить о том, какая ошибка возникла (через класс-обработчик).
3. Проверка операций в штатном режиме.
Выбранный метод --------> 2


Выберите операцию, в которой произойдет исключительная ситуация:
1. Ввод в пустое множество.
2. Отрицательный индекс.
3. Индекс больше размера.
4. Получить ссылку на конец множества, но оно пустое.
5. Удалить один элемент из пустого множества.
Чтобы ничего не выбирать и вернуться в начало введите несуществующий номер.
Выбранный метод --------> 1

Посмотрим, что находится в множестве:
Вывод множества:
Пусто.
А теперь попробуем ввести в него что-нибудь.
Ошибка! Размер множества = 0, невозможно ввести элементы!

Выберите вариант реализации обработки исключительных ситуаций:
0. Выйти из программы.
1. Просто говорить о том, что возникла ошибка.
2. Говорить о том, какая ошибка возникла (через класс-обработчик).
3. Проверка операций в штатном режиме.
Выбранный метод --------> 2


Выберите операцию, в которой произойдет исключительная ситуация:
1. Ввод в пустое множество.
2. Отрицательный индекс.
3. Индекс больше размера.
4. Получить ссылку на конец множества, но оно пустое.
5. Удалить один элемент из пустого множества.
Чтобы ничего не выбирать и вернуться в начало введите несуществующий номер.
Выбранный метод --------> 5

Посмотрим, что находится в множестве:
Вывод множества:
Пусто.
А теперь попробуем удалить элемент из этого множества.
Ошибка! В этом множестве нет элементов, удалять нечего!

Выберите вариант реализации обработки исключительных ситуаций:
0. Выйти из программы.
1. Просто говорить о том, что возникла ошибка.
2. Говорить о том, какая ошибка возникла (через класс-обработчик).
3. Проверка операций в штатном режиме.
Выбранный метод --------> 2


Выберите операцию, в которой произойдет исключительная ситуация:
1. Ввод в пустое множество.
2. Отрицательный индекс.
3. Индекс больше размера.
4. Получить ссылку на конец множества, но оно пустое.
5. Удалить один элемент из пустого множества.
Чтобы ничего не выбирать и вернуться в начало введите несуществующий номер.
Выбранный метод --------> 2

Посмотрим, что находится в множестве:
Вывод множества:
0 14 68 4 27 92 93 66 54 80 60 12 21 83 47 81 19 99 98 73 33 44 59 45 22 78 49 6
А теперь попробуем вывести элемент с -4 индексом.
Ошибка! Индекс не может быть отрицательным!

Выберите вариант реализации обработки исключительных ситуаций:
0. Выйти из программы.
1. Просто говорить о том, что возникла ошибка.
2. Говорить о том, какая ошибка возникла (через класс-обработчик).
3. Проверка операций в штатном режиме.
Выбранный метод --------> 2


Выберите операцию, в которой произойдет исключительная ситуация:
1. Ввод в пустое множество.
2. Отрицательный индекс.
3. Индекс больше размера.
4. Получить ссылку на конец множества, но оно пустое.
5. Удалить один элемент из пустого множества.
Чтобы ничего не выбирать и вернуться в начало введите несуществующий номер.
Выбранный метод --------> 4

Посмотрим, что находится в множестве:
Вывод множества:
Пусто.
А теперь попробуем получить ссылку на последний элемент и вывести его.
Ошибка! В этом множестве нет элементов, не на что давать ссылку!

Выберите вариант реализации обработки исключительных ситуаций:
0. Выйти из программы.
1. Просто говорить о том, что возникла ошибка.
2. Говорить о том, какая ошибка возникла (через класс-обработчик).
3. Проверка операций в штатном режиме.
Выбранный метод --------> 2


Выберите операцию, в которой произойдет исключительная ситуация:
1. Ввод в пустое множество.
2. Отрицательный индекс.
3. Индекс больше размера.
4. Получить ссылку на конец множества, но оно пустое.
5. Удалить один элемент из пустого множества.
Чтобы ничего не выбирать и вернуться в начало введите несуществующий номер.
Выбранный метод --------> 3

Посмотрим, что находится в множестве:
Вывод множества:
1 35 71 67 17 75 25 97 77 98 99 76 6 8 57 15 41 33 22 52 36 85 69 59 19 83
А теперь попробуем вывести элемент с 40 индексом.
Ошибка! Индекс слишком большой!

Выберите вариант реализации обработки исключительных ситуаций:
0. Выйти из программы.
1. Просто говорить о том, что возникла ошибка.
2. Говорить о том, какая ошибка возникла (через класс-обработчик).
3. Проверка операций в штатном режиме.
Выбранный метод --------> 3

Случайное множество:
Вывод множества:
86 81 18 25 33 8 63 51 42 88 29 23 53 52 48 45 61 91 24 10 22 75 46 93 20 92 7
Последний элемент случайного множества: 7
Множество на десять в ручном режиме:
Ввод множества:
Введите элемент множества: [0] = 33
Введите элемент множества: [1] = 63
Введите элемент множества: [2] = 63
Введите элемент множества: [3] = 33
Введите элемент множества: [4] = 0
Введите элемент множества: [5] = 7
Введите элемент множества: [6] = 7
Введите элемент множества: [7] = 0
Введите элемент множества: [8] = 33
Введите элемент множества: [9] = 1

Вывод множества:
33 63 0 7 1
Элемент по индексу ноль этого множества: 33
Пересечение этих множеств:
Вывод множества:
33 63 7
Емкость пересечения: 53
Размер пересечения: 3
Из пересечения выпнули последний элемент и посадили его на диету:
Вывод множества:
33 63

Теперь емкость пересечения: 2
Размер пересечения теперь: 2
Не бойтесь, мы вернули элемент, который выкинули:
Вывод множества:
33 63 7

Теперь емкость пересечения: 52
Размер пересечения теперь: 3

Выберите вариант реализации обработки исключительных ситуаций:
0. Выйти из программы.
1. Просто говорить о том, что возникла ошибка.
2. Говорить о том, какая ошибка возникла (через класс-обработчик).
3. Проверка операций в штатном режиме.
Выбранный метод --------> 0


Выход из программы...

*/